version: "3.8"

services:
  backend:
    build:
      context: ./LMS
      dockerfile: dockerfile
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./LMS/myproject:/API-PROJECT
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    environment:
      - DATABASE_URL=postgresql://postgres:xxx@db:5432/yoo




  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./LMS-react/dist:/usr/share/nginx/html:ro
    depends_on:
      - backend
      - frontend

 
    

  frontend:
    build:
      context: ./LMS-react
      dockerfile: Dockerfile
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  db:
    image: postgres:17
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: xxx
      POSTGRES_DB: yoo
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

volumes:
  postgres_data: